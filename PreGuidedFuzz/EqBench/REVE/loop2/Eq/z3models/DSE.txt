

----------------------------------------------------Model (the counterexample in z3 smt2 format): ---------------------------------
(model 
  (define-fun UF_j_1 () Int
    2)
  (define-fun Ret () Int
    3)
  (define-fun n () Int
    39)
  (define-fun UF_i_2 ((x!0 Int)) Int
    (ite (= x!0 0) 38
    (ite (= x!0 38) 38
      40)))
  (define-fun UF_j_2 ((x!0 Int)) Int
    (ite (= x!0 3) 4
      3))
  (define-fun log ((x!0 Real)) Real
    0.0)
)

-----------------------------------------------------------------------------------------------
-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(let ((a!1 (and (> (UF_i_2 (UF_i_2 1)) n)
                (<= (UF_i_2 1) n)
                (<= 1 n)
                (= Ret (UF_j_2 (UF_j_2 UF_j_1))))))
  (or a!1
      (and (> (UF_i_2 1) n) (<= 1 n) (= Ret (UF_j_2 UF_j_1)))
      (and (> 1 n) (= Ret UF_j_1))))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(let ((a!1 (and (>= (UF_i_2 (UF_i_2 0)) n)
                (< (UF_i_2 0) n)
                (< 0 n)
                (= Ret (UF_j_2 (UF_j_2 UF_j_1))))))
  (or a!1
      (and (>= (UF_i_2 0) n) (< 0 n) (= Ret (UF_j_2 UF_j_1)))
      (and (>= 0 n) (= Ret UF_j_1))))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun UF_i_2 (Int ) Int)
(declare-fun n () Int)
(declare-fun Ret () Int)
(declare-fun UF_j_1 () Int)
(declare-fun UF_j_2 (Int ) Int)
(let ((a!1 (and (> (UF_i_2 (UF_i_2 1)) n)
                (<= (UF_i_2 1) n)
                (<= 1 n)
                (= Ret (UF_j_2 (UF_j_2 UF_j_1)))))
      (a!3 (and (>= (UF_i_2 (UF_i_2 0)) n)
                (< (UF_i_2 0) n)
                (< 0 n)
                (= Ret (UF_j_2 (UF_j_2 UF_j_1))))))
(let ((a!2 (or a!1
               (and (> (UF_i_2 1) n) (<= 1 n) (= Ret (UF_j_2 UF_j_1)))
               (and (> 1 n) (= Ret UF_j_1))))
      (a!4 (or a!3
               (and (>= (UF_i_2 0) n) (< 0 n) (= Ret (UF_j_2 UF_j_1)))
               (and (>= 0 n) (= Ret UF_j_1)))))
  (not (= a!2 a!4))))
-----------------------------------------------------------------------------------------------
