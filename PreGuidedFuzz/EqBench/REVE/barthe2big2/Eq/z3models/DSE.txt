

----------------------------------------------------Model (the counterexample in z3 smt2 format): ---------------------------------
(model 
  (define-fun Ret () Int
    4)
  (define-fun n () Int
    2)
  (define-fun UF_x_2 ((x!0 Int) (x!1 Int) (x!2 Int)) Int
    (ite (and (= x!0 3) (= x!1 1) (= x!2 2)) 5
      4))
  (define-fun UF_x_1 ((x!0 Int)) Int
    3)
  (define-fun log ((x!0 Real)) Real
    0.0)
)

-----------------------------------------------------------------------------------------------
-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(= Ret (UF_x_2 (UF_x_1 n) 0 n))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(= Ret (UF_x_2 (UF_x_1 n) 1 n))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun Ret () Int)
(declare-fun n () Int)
(declare-fun UF_x_1 (Int ) Int)
(declare-fun UF_x_2 (Int Int Int ) Int)
(let ((a!1 (= (= Ret (UF_x_2 (UF_x_1 n) 0 n)) (= Ret (UF_x_2 (UF_x_1 n) 1 n)))))
  (not a!1))
-----------------------------------------------------------------------------------------------
