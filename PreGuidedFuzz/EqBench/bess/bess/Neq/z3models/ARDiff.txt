

----------------------------------------------------Model (the counterexample in z3 smt2 format): ---------------------------------
(model 
  (define-fun Ret () Real
    (- (/ 3.0 2.0)))
  (define-fun n () Real
    (/ 5.0 2.0))
  (define-fun x () Real
    0.0)
  (define-fun AF_bessk0 ((x!0 Real)) Real
    0.0)
  (define-fun AF_bessk1 ((x!0 Real)) Real
    (- (/ 3.0 2.0)))
  (define-fun log ((x!0 Real)) Real
    0.0)
)

-----------------------------------------------------------------------------------------------
-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(let ((a!1 (+ (AF_bessk0 (* x 2.0))
              (* (* x 2.0) 1.0 (AF_bessk1 (* x 2.0)))
              (* x 2.0))))
(let ((a!2 (= Ret (+ (AF_bessk1 (* x 2.0)) (* (* x 2.0) 2.0 a!1) (* x 2.0)))))
  (or (and (< n 2.0) (= Ret (- 1000.0)))
      (and (= n 2.0) (< 1.0 n) (= 2.0 n) (= Ret a!1))
      (and (= n 3.0) (< 2.0 n) (< 1.0 n) (> n 2.0) a!2)
      (and (> 3.0 n) (< 2.0 n) (< 1.0 n) (> n 2.0) a!2))))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(= Ret (- 1.0))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun n () Real)
(declare-fun Ret () Real)
(declare-fun x () Real)
(declare-fun AF_bessk0 (Real ) Real)
(declare-fun AF_bessk1 (Real ) Real)
(let ((a!1 (+ (AF_bessk0 (* x 2.0))
              (* (* x 2.0) 1.0 (AF_bessk1 (* x 2.0)))
              (* x 2.0))))
(let ((a!2 (= Ret (+ (AF_bessk1 (* x 2.0)) (* (* x 2.0) 2.0 a!1) (* x 2.0)))))
(let ((a!3 (= (or (and (< n 2.0) (= Ret (- 1000.0)))
                  (and (= n 2.0) (< 1.0 n) (= 2.0 n) (= Ret a!1))
                  (and (= n 3.0) (< 2.0 n) (< 1.0 n) (> n 2.0) a!2)
                  (and (> 3.0 n) (< 2.0 n) (< 1.0 n) (> n 2.0) a!2))
              (= Ret (- 1.0)))))
  (not a!3))))
-----------------------------------------------------------------------------------------------
