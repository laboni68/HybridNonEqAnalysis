-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(let ((a!1 (and (not (= a 0.0))
                (< x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0))))
      (a!2 (= Ret (/ (* (UF_bt_3 a b x) (AF_betacf a b x)) a)))
      (a!3 (and (not (= b 0.0))
                (= (/ (+ a 1.0) (+ a b 2.0)) x)
                (not (= (+ a b 2.0) 0.0))))
      (a!4 (/ (* (UF_bt_3 a b x) (AF_betacf b a (- 1.0 x))) b))
      (a!5 (and (not (= b 0.0))
                (> x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0))))
      (a!6 (= Ret (/ (* UF_bt_2 (AF_betacf a b x)) a)))
      (a!7 (/ (* UF_bt_2 (AF_betacf b a (- 1.0 x))) b)))
  (or (and (and a!1 (< x 1.0)) (< x 0.0) a!2)
      (and (and a!3 (< x 1.0)) (< x 0.0) (= Ret (- 1.0 a!4)))
      (and (and a!5 (< x 1.0)) (< x 0.0) (= Ret (- 1.0 a!4)))
      (and a!1 (= 0.0 x) a!6)
      (and a!5 (= 0.0 x) (= Ret (- 1.0 a!7)))
      (and (and a!1 (< x 1.0)) (> x 0.0) a!2)
      (and (and a!3 (< x 1.0)) (> x 0.0) (= Ret (- 1.0 a!4)))
      (and (and a!5 (< x 1.0)) (> x 0.0) (= Ret (- 1.0 a!4)))
      (and a!1 (= 1.0 x) (> x 0.0) a!6)
      (and a!3 (= 1.0 x) (> x 0.0) (= Ret (- 1.0 a!7)))
      (and a!5 (= 1.0 x) (> x 0.0) (= Ret (- 1.0 a!7)))
      (and a!1 (> x 1.0) (> x 0.0) a!2)
      (and a!3 (> x 1.0) (> x 0.0) (= Ret (- 1.0 a!4)))
      (and a!5 (> x 1.0) (> x 0.0) (= Ret (- 1.0 a!4)))))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(let ((a!1 (and (not (= a 0.0))
                (< x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0))))
      (a!2 (= Ret (/ (* UF_bt_2 (AF_betacf a b x)) a)))
      (a!3 (and (not (= b 0.0))
                (= (/ (+ a 1.0) (+ a b 2.0)) x)
                (not (= (+ a b 2.0) 0.0))))
      (a!4 (/ (* UF_bt_2 (AF_betacf b a (- 1.0 x))) b))
      (a!5 (and (not (= b 0.0))
                (> x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0)))))
  (or (and a!1 (< x 0.0) a!2)
      (and a!3 (< x 0.0) (= Ret (- 1.0 a!4)))
      (and a!5 (< x 0.0) (= Ret (- 1.0 a!4)))
      (and a!1 (< x 1.0) (= 0.0 x) a!2)
      (and a!5 (< x 1.0) (= 0.0 x) (= Ret (- 1.0 a!4)))
      (and a!1 (> x 0.0) a!2)
      (and a!3 (> x 0.0) (= Ret (- 1.0 a!4)))
      (and a!5 (> x 0.0) (= Ret (- 1.0 a!4)))))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun a () Real)
(declare-fun x () Real)
(declare-fun b () Real)
(declare-fun Ret () Real)
(declare-fun UF_bt_3 (Real Real Real ) Real)
(declare-fun AF_betacf (Real Real Real ) Real)
(declare-fun UF_bt_2 () Real)
(let ((a!1 (and (not (= a 0.0))
                (< x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0))))
      (a!2 (= Ret (/ (* (UF_bt_3 a b x) (AF_betacf a b x)) a)))
      (a!3 (and (not (= b 0.0))
                (= (/ (+ a 1.0) (+ a b 2.0)) x)
                (not (= (+ a b 2.0) 0.0))))
      (a!4 (/ (* (UF_bt_3 a b x) (AF_betacf b a (- 1.0 x))) b))
      (a!5 (and (not (= b 0.0))
                (> x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0))))
      (a!6 (= Ret (/ (* UF_bt_2 (AF_betacf a b x)) a)))
      (a!7 (/ (* UF_bt_2 (AF_betacf b a (- 1.0 x))) b)))
(let ((a!8 (or (and (and a!1 (< x 1.0)) (< x 0.0) a!2)
               (and (and a!3 (< x 1.0)) (< x 0.0) (= Ret (- 1.0 a!4)))
               (and (and a!5 (< x 1.0)) (< x 0.0) (= Ret (- 1.0 a!4)))
               (and a!1 (= 0.0 x) a!6)
               (and a!5 (= 0.0 x) (= Ret (- 1.0 a!7)))
               (and (and a!1 (< x 1.0)) (> x 0.0) a!2)
               (and (and a!3 (< x 1.0)) (> x 0.0) (= Ret (- 1.0 a!4)))
               (and (and a!5 (< x 1.0)) (> x 0.0) (= Ret (- 1.0 a!4)))
               (and a!1 (= 1.0 x) (> x 0.0) a!6)
               (and a!3 (= 1.0 x) (> x 0.0) (= Ret (- 1.0 a!7)))
               (and a!5 (= 1.0 x) (> x 0.0) (= Ret (- 1.0 a!7)))
               (and a!1 (> x 1.0) (> x 0.0) a!2)
               (and a!3 (> x 1.0) (> x 0.0) (= Ret (- 1.0 a!4)))
               (and a!5 (> x 1.0) (> x 0.0) (= Ret (- 1.0 a!4)))))
      (a!9 (or (and a!1 (< x 0.0) a!6)
               (and a!3 (< x 0.0) (= Ret (- 1.0 a!7)))
               (and a!5 (< x 0.0) (= Ret (- 1.0 a!7)))
               (and (and a!1 (< x 1.0)) (= 0.0 x) a!6)
               (and (and a!5 (< x 1.0)) (= 0.0 x) (= Ret (- 1.0 a!7)))
               (and a!1 (> x 0.0) a!6)
               (and a!3 (> x 0.0) (= Ret (- 1.0 a!7)))
               (and a!5 (> x 0.0) (= Ret (- 1.0 a!7))))))
  (not (= a!8 a!9))))
-----------------------------------------------------------------------------------------------
