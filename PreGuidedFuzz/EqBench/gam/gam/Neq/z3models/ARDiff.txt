-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(let ((a!1 (< x (/ (+ a 1.0) (+ (+ a b) 2.0))))
      (a!2 (not (= (+ (+ a b) 2.0) 0.0)))
      (a!4 (- (- (AF_gammln (+ a b)) (AF_gammln a)) (AF_gammln b)))
      (a!5 (log (to_real (to_int (- 1.0 x)))))
      (a!8 (= (/ (+ a 1.0) (+ (+ a b) 2.0)) x))
      (a!11 (> x (/ (+ a 1.0) (+ (+ a b) 2.0))))
      (a!13 (= Ret (/ (* (AF_betacf a b x) 0.0) a)))
      (a!15 (/ (* (AF_betacf b a (- 1.0 x)) 0.0) b)))
(let ((a!3 (and (and (not (= a 0.0)) a!1 a!2) (< x 1.0)))
      (a!6 (^ (/ 543656365691809.0 200000000000000.0)
              (+ a!4 (* a (log x)) (* b a!5))))
      (a!9 (and (and (not (= b 0.0)) a!8 a!2) (< x 1.0)))
      (a!12 (and (and (not (= b 0.0)) a!11 a!2) (< x 1.0)))
      (a!14 (and (and (not (= a 0.0)) a!1 a!2) (= 0.0 x) a!13))
      (a!16 (and (and (not (= b 0.0)) a!11 a!2) (= 0.0 x) (= Ret (- 1.0 a!15))))
      (a!17 (and (and (not (= a 0.0)) a!1 a!2) (= 1.0 x) (> x 0.0) a!13))
      (a!18 (and (and (not (= b 0.0)) a!8 a!2)
                 (= 1.0 x)
                 (> x 0.0)
                 (= Ret (- 1.0 a!15))))
      (a!19 (and (and (not (= b 0.0)) a!11 a!2)
                 (= 1.0 x)
                 (> x 0.0)
                 (= Ret (- 1.0 a!15)))))
(let ((a!7 (= Ret (/ (* a!6 (AF_betacf a b x)) a)))
      (a!10 (/ (* a!6 (AF_betacf b a (- 1.0 x))) b)))
(let ((a!20 (and (and (not (= a 0.0)) a!1 a!2) (> x 1.0) (> x 0.0) a!7))
      (a!21 (and (and (not (= b 0.0)) a!8 a!2)
                 (> x 1.0)
                 (> x 0.0)
                 (= Ret (- 1.0 a!10))))
      (a!22 (and (and (not (= b 0.0)) a!11 a!2)
                 (> x 1.0)
                 (> x 0.0)
                 (= Ret (- 1.0 a!10)))))
  (or (and a!3 (< x 0.0) a!7)
      (and a!9 (< x 0.0) (= Ret (- 1.0 a!10)))
      (and a!12 (< x 0.0) (= Ret (- 1.0 a!10)))
      a!14
      a!16
      (and a!3 (> x 0.0) a!7)
      (and a!9 (> x 0.0) (= Ret (- 1.0 a!10)))
      (and a!12 (> x 0.0) (= Ret (- 1.0 a!10)))
      a!17
      a!18
      a!19
      a!20
      a!21
      a!22)))))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(let ((a!1 (and (not (= a 0.0))
                (< x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0))))
      (a!2 (= Ret (/ (* (AF_betacf a b x) 0.0) a)))
      (a!3 (and (not (= b 0.0))
                (= (/ (+ a 1.0) (+ a b 2.0)) x)
                (not (= (+ a b 2.0) 0.0))))
      (a!4 (/ (* (AF_betacf b a (- 1.0 x)) 0.0) b))
      (a!5 (and (not (= b 0.0))
                (> x (/ (+ a 1.0) (+ a b 2.0)))
                (not (= (+ a b 2.0) 0.0)))))
  (or (and a!1 (< x 0.0) a!2)
      (and a!3 (< x 0.0) (= Ret (- 1.0 a!4)))
      (and a!5 (< x 0.0) (= Ret (- 1.0 a!4)))
      (and a!1 (< x 1.0) (= 0.0 x) a!2)
      (and a!5 (< x 1.0) (= 0.0 x) (= Ret (- 1.0 a!4)))
      (and a!1 (> x 0.0) a!2)
      (and a!3 (> x 0.0) (= Ret (- 1.0 a!4)))
      (and a!5 (> x 0.0) (= Ret (- 1.0 a!4)))))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun a () Real)
(declare-fun x () Real)
(declare-fun b () Real)
(declare-fun Ret () Real)
(declare-fun AF_gammln (Real ) Real)
(declare-fun AF_betacf (Real Real Real ) Real)
(let ((a!1 (< x (/ (+ a 1.0) (+ (+ a b) 2.0))))
      (a!2 (not (= (+ (+ a b) 2.0) 0.0)))
      (a!4 (- (- (AF_gammln (+ a b)) (AF_gammln a)) (AF_gammln b)))
      (a!5 (log (to_real (to_int (- 1.0 x)))))
      (a!8 (= (/ (+ a 1.0) (+ (+ a b) 2.0)) x))
      (a!11 (> x (/ (+ a 1.0) (+ (+ a b) 2.0))))
      (a!13 (= Ret (/ (* (AF_betacf a b x) 0.0) a)))
      (a!15 (/ (* (AF_betacf b a (- 1.0 x)) 0.0) b)))
(let ((a!3 (and (and (not (= a 0.0)) a!1 a!2) (< x 1.0)))
      (a!6 (^ (/ 543656365691809.0 200000000000000.0)
              (+ a!4 (* a (log x)) (* b a!5))))
      (a!9 (and (and (not (= b 0.0)) a!8 a!2) (< x 1.0)))
      (a!12 (and (and (not (= b 0.0)) a!11 a!2) (< x 1.0)))
      (a!14 (and (and (not (= a 0.0)) a!1 a!2) (= 0.0 x) a!13))
      (a!16 (and (and (not (= b 0.0)) a!11 a!2) (= 0.0 x) (= Ret (- 1.0 a!15))))
      (a!17 (and (and (not (= a 0.0)) a!1 a!2) (= 1.0 x) (> x 0.0) a!13))
      (a!18 (and (and (not (= b 0.0)) a!8 a!2)
                 (= 1.0 x)
                 (> x 0.0)
                 (= Ret (- 1.0 a!15))))
      (a!19 (and (and (not (= b 0.0)) a!11 a!2)
                 (= 1.0 x)
                 (> x 0.0)
                 (= Ret (- 1.0 a!15))))
      (a!24 (and (and (not (= a 0.0)) a!1 a!2) (< x 0.0) a!13))
      (a!25 (and (and (not (= b 0.0)) a!8 a!2) (< x 0.0) (= Ret (- 1.0 a!15))))
      (a!26 (and (and (not (= b 0.0)) a!11 a!2) (< x 0.0) (= Ret (- 1.0 a!15))))
      (a!27 (and (and (not (= a 0.0)) a!1 a!2) (> x 0.0) a!13))
      (a!28 (and (and (not (= b 0.0)) a!8 a!2) (> x 0.0) (= Ret (- 1.0 a!15))))
      (a!29 (and (and (not (= b 0.0)) a!11 a!2) (> x 0.0) (= Ret (- 1.0 a!15)))))
(let ((a!7 (= Ret (/ (* a!6 (AF_betacf a b x)) a)))
      (a!10 (/ (* a!6 (AF_betacf b a (- 1.0 x))) b))
      (a!30 (or a!24
                a!25
                a!26
                (and a!3 (= 0.0 x) a!13)
                (and a!12 (= 0.0 x) (= Ret (- 1.0 a!15)))
                a!27
                a!28
                a!29)))
(let ((a!20 (and (and (not (= a 0.0)) a!1 a!2) (> x 1.0) (> x 0.0) a!7))
      (a!21 (and (and (not (= b 0.0)) a!8 a!2)
                 (> x 1.0)
                 (> x 0.0)
                 (= Ret (- 1.0 a!10))))
      (a!22 (and (and (not (= b 0.0)) a!11 a!2)
                 (> x 1.0)
                 (> x 0.0)
                 (= Ret (- 1.0 a!10)))))
(let ((a!23 (or (and a!3 (< x 0.0) a!7)
                (and a!9 (< x 0.0) (= Ret (- 1.0 a!10)))
                (and a!12 (< x 0.0) (= Ret (- 1.0 a!10)))
                a!14
                a!16
                (and a!3 (> x 0.0) a!7)
                (and a!9 (> x 0.0) (= Ret (- 1.0 a!10)))
                (and a!12 (> x 0.0) (= Ret (- 1.0 a!10)))
                a!17
                a!18
                a!19
                a!20
                a!21
                a!22)))
  (not (= a!23 a!30)))))))
-----------------------------------------------------------------------------------------------
