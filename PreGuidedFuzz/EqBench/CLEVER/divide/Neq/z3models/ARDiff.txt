

----------------------------------------------------Model (the counterexample in z3 smt2 format): ---------------------------------
(model 
  (define-fun Ret () Int
    1797)
  (define-fun y () Int
    (- 2))
  (define-fun x () Int
    (- 3594))
  (define-fun div0 ((x!0 Int) (x!1 Int)) Int
    1797)
  (define-fun mod0 ((x!0 Int) (x!1 Int)) Int
    0)
  (define-fun log ((x!0 Real)) Real
    0.0)
)

-----------------------------------------------------------------------------------------------
-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(and (not (= y 0)) (= Ret (div x y)))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(= Ret (* y x))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun y () Int)
(declare-fun Ret () Int)
(declare-fun x () Int)
(let ((a!1 (= (and (not (= y 0)) (= Ret (div x y))) (= Ret (* y x)))))
  (not a!1))
-----------------------------------------------------------------------------------------------
