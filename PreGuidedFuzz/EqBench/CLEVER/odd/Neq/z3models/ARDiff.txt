

----------------------------------------------------Model (the counterexample in z3 smt2 format): ---------------------------------
(model 
  (define-fun Ret () Int
    2)
  (define-fun x () Int
    0)
  (define-fun UF_x_1 ((x!0 Int)) Int
    1)
  (define-fun UF_counter_1 ((x!0 Int)) Int
    2)
  (define-fun log ((x!0 Real)) Real
    0.0)
)

-----------------------------------------------------------------------------------------------
-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(= Ret (UF_counter_1 (UF_x_1 x)))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(= Ret (+ (UF_counter_1 (UF_x_1 x)) 1))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun Ret () Int)
(declare-fun x () Int)
(declare-fun UF_x_1 (Int ) Int)
(declare-fun UF_counter_1 (Int ) Int)
(let ((a!1 (= Ret (+ (UF_counter_1 (UF_x_1 x)) 1))))
(let ((a!2 (= (= Ret (UF_counter_1 (UF_x_1 x))) a!1)))
  (not a!2)))
-----------------------------------------------------------------------------------------------
