

----------------------------------------------------Model (the counterexample in z3 smt2 format): ---------------------------------
(model 
  (define-fun Ret () Real
    (/ 2853808990946861.0 10000000000000000.0))
  (define-fun idum () Int
    (- 53668))
  (define-fun log ((x!0 Real)) Real
    0.0)
)

-----------------------------------------------------------------------------------------------
-------------------The Z3 formula for the old method (z3 smt format) -------------------------
(let ((a!1 (* (- idum (* (div idum 53668) 53668)) 40014)))
(let ((a!2 (>= (- a!1 (* (div idum 53668) 12211)) 0)))
  (or (= Ret (/ 2853808990946861.0 10000000000000000.0))
      (and a!2 (= Ret (/ 6554163483485531.0 10000000000000000.0))))))
-----------------------------------------------------------------------------------------------

-------------------The Z3 formula for the new method ------------------------------------------
(let ((a!1 (* (- idum (* (div idum 53668) 53668)) 40014)))
(let ((a!2 (= (- a!1 (* (div idum 53668) 12211)) 0))
      (a!3 (>= (- a!1 (* (div idum 53668) 12211)) 0)))
  (or (= Ret (/ 9999999999999997.0 10000000000000000.0))
      (and (not a!2) a!3 (= Ret (/ 9999999999999997.0 10000000000000000.0))))))
-----------------------------------------------------------------------------------------------

-------------------The final Z3 formula for constraint solving -------------------------
(declare-fun Ret () Real)
(declare-fun idum () Int)
(let ((a!1 (* (- idum (* (div idum 53668) 53668)) 40014)))
(let ((a!2 (>= (- a!1 (* (div idum 53668) 12211)) 0))
      (a!3 (= (- a!1 (* (div idum 53668) 12211)) 0)))
(let ((a!4 (= (or (= Ret (/ 2853808990946861.0 10000000000000000.0))
                  (and a!2 (= Ret (/ 6554163483485531.0 10000000000000000.0))))
              (or (= Ret (/ 9999999999999997.0 10000000000000000.0))
                  (and (not a!3)
                       a!2
                       (= Ret (/ 9999999999999997.0 10000000000000000.0)))))))
  (not a!4))))
-----------------------------------------------------------------------------------------------
